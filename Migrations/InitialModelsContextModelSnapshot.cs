// <auto-generated />
using final_project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace finalproject.Migrations
{
    [DbContext(typeof(InitialModelsContext))]
    partial class InitialModelsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("final_project.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PostalCode");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetNumber");

                    b.Property<string>("Unit");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("final_project.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorFirstName");

                    b.Property<string>("AuthorLastName");

                    b.Property<string>("Isbn");

                    b.Property<string>("Title");

                    b.HasKey("BookId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("final_project.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuyerId");

                    b.Property<bool>("IsSold");

                    b.Property<DateTime>("OrderDate");

                    b.Property<float>("SalePrice");

                    b.Property<int>("SellerId");

                    b.Property<DateTime>("ShippedDate");

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("final_project.Models.SaleItem", b =>
                {
                    b.Property<int>("SaleItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<bool>("IsSold");

                    b.Property<int?>("OrderId");

                    b.Property<float>("Price");

                    b.Property<string>("Quality");

                    b.HasKey("SaleItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("SaleItem");
                });

            modelBuilder.Entity("final_project.Models.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("SchoolId");

                    b.ToTable("School");
                });

            modelBuilder.Entity("final_project.Models.SaleItem", b =>
                {
                    b.HasOne("final_project.Models.Order")
                        .WithMany("SaleItems")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
