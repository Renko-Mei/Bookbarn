@model BookBarn.Models.SearchViewModels.SearchViewModel

@{
    ViewData["Title"] = "Search";
}


<div>
	<h1>Search</h1>

	<p>Search for books.</p>

	<form asp-controller="Search" asp-action="Index" method="get">
		<select asp-for="SearchType" asp-items="Model.SearchTypes">
			<option value="title">Title</option>
			<option value="author">Author</option>
			<option value="isbn">ISBN</option>
		</select>

		<input type="text" name="id" />
		<input type="submit" value="Search" />

		<div>
			Sort by:
			<select asp-for="SortType" asp-items="Model.SortTypes">
				<option value="title">Title: A-Z</option>
				<option value="authorFirst">Author - First Name: A-Z</option>
				<option value="authorLast">Author - Last Name: A-Z</option>
				<option value="price">Price: Lowest first</option>
			</select>
		</div>
	</form>
</div>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.SearchResults[0].Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.SearchResults[0].Author)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.SearchResults[0].Quality)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.SearchResults[0].Price)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var resultItem in Model.SearchResults)
		{
			<tr>
				<td>					
					@Html.DisplayFor(model => resultItem.Title)
				</td>
				<td>
					@Html.DisplayFor(model => resultItem.Author)
				</td>
				<td>
					@Html.DisplayFor(model => resultItem.Quality)
				</td>
				<td>
					@Html.DisplayFor(model => resultItem.Price)
				</td>
				<td>
					<a asp-controller="SaleItem" asp-action="Details" asp-route-id="@resultItem.SaleItemID">Details</a>
				</td>
			</tr>
		}
	</tbody>
</table>

    